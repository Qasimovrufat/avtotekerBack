@model Wheel.DAL.Models.Campaign

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>CampaginTyre</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.id)

        <div class="md-card uk-margin-medium-bottom">
            <div class="md-card-content">
                <div class="uk-grid">
                    <div class="uk-width-1-1">
                        <ul class="uk-tab" data-uk-tab="{connect:'#tabs_1_content'}" id="tabs_1">
                            <li style="width:33%" class="uk-active"><a href="#"><b>Azərbaycanca</b></a></li>
                            <li style="width:33%"><a href="#"><b>Rusca</b></a></li>
                            <li style="width:33%"><a href="#"><b>İngiliscə</b></a></li>
                        </ul>
                        <ul id="tabs_1_content" class="uk-switcher uk-margin">
                            <li>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.az, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.az, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.az, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </li>
                            <li>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.ru, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.ru, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.ru, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </li>
                            <li>
                                <div class="form-group">
                                    @Html.LabelFor(model => model.en, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.en, new { htmlAttributes = new { @class = "form-control", id = "enTiny" } })
                                        @Html.ValidationMessageFor(model => model.en, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                            </li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="uk-width-1-2">
            <div class="uk-width-large-1-2" style="width: 100%">
                <select id="selec_adv_3" style="width: 100%" class="select" name="TyreId" multiple>
                    
                    @if (Model.TyreId != null)
                    {
                        for (int i = 0; i < Model.TyreId.Count; i++)
                         {
                             <option selected="selected" value="@Model.TyreId[i]">@Model.TyreName[i]</option>
                         }
                    }

                </select>
                
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Update" class="btn btn-default" />
            </div>
        </div>
        
    </div>
}

<iframe id="form_target" name="form_target" style="display:none"></iframe>
<form id="my_form" action="/Image/Upload" target="form_target" method="post" enctype="multipart/form-data" style="width:0px;height:0;overflow:hidden">
    <input name="files" type="file" onchange="uploadImageJS();this.value='';">
</form>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section scripts
{


    <script src="@Url.Content("/Scripts/tinymce/tinymce.min.js")" type="text/javascript"></script>

    <script type="text/javascript">
        (function () {
            tinyMCE.init({
                selector: "textarea",
                toolbar: " fontselect fontsizeselect undo redo | styleselect | bold italic | link image alignleft aligncenter alignright",
                plugins: ["image"],
                width: '99%',
                height: 300,
                file_browser_callback: function (field_name, url, type, win) {
                    if (type == 'image') $('#my_form input').click();
                },
                images_upload_credentials: true,
                themes: "inlite",
                block_formats: 'Paragraph=p;Header 1=h1;Header 2=h2;Header 3=h3',
                fontsize_formats: '8pt 10pt 12pt 14pt 18pt 24pt 36pt',
                font_formats: 'Arial=arial,helvetica,sans-serif;Courier New=courier new,courier,monospace;AkrutiKndPadmini=Akpdmi-n',
                insert_toolbar: 'quickimage quicktable',
                content_css: "@Url.Content("~/Content/Site.css")"

            });
        })();

        function uploadImageJS() {
            //$('.mce-btn.mce-open').parent().find('.mce-textbox').val('%s').closest('.mce-window').find('.mce-primary')
            var formdata = new FormData(document.getElementById('my_form')); //FormData object
            var xhr = new XMLHttpRequest();
            xhr.open('POST', '/image/Upload');
            xhr.send(formdata);
            xhr.onreadystatechange = function () {
                jQuery("#uploadFile").show();
                if (xhr.readyState == 4 && xhr.status == 200) {

                    var data = xhr.responseText;
                    var jsonResponse = JSON.parse(data);
                    // $(".mce-btn .mce-open").closest("div").find("mce-textbox").val(jsonResponse.ImagePath[0]);
                    $('.mce-btn.mce-open').parent().find('.mce-textbox').val(jsonResponse.ImagePath[0]);
                    console.log(jsonResponse);
                }
                else if (xhr.readyState == 4 && xhr.status == 404) {
                    var message = "<a href='#' class='notify-action'>Clear</a> Failed! Something was wrong";
                    var status = "danger";
                    var pos = "top-right";
                    showNotification(message, status, pos);
                    alert("error");

                }

            }
            return false;

        }
    </script>

    <script>
            var at;
            $(".select")
                .selectize({
                    plugins: {
                        remove_button: {
                            label: ""
                        }
                    },
                    options: [],

                    preloader: true,
                    valueField: "id",
                    labelField: "title",
                    searchField: "title",
                    create: !1,
                    load: function (query, callback) {
                        console.log(query);
                        $.ajax({
                            url: '/SoldTyre/GetTyres',
                            type: 'GET',
                            dataType: 'json',
                            data: {
                                title: query
                            },
                            error: function() {
                                callback();
                            },
                            success: function(res) {
                                callback(res);
                            }
                        });
                    },
                    render: {
                        option: function (t, e) {
                            return '<div class="option"><span class="title">' + e(t.title) + "</span></div>";
                        },
                        item: function (t, e) {
                            return '<div class="item"><a href="' +
                                e(t.url) +
                                '" target="_blank">' +
                                e(t.title) +
                                "</a></div>";
                        }
                    },
                    onDropdownOpen: function (t) {
                        t.hide()
                            .velocity("slideDown",
                            {
                                begin: function () {
                                    t.css({
                                        "margin-top": "0"
                                    });
                                },
                                duration: 200,
                                easing:easing_swiftOut
                            });
                    },
                    onDropdownClose: function (t) {
                        t.show()
                            .velocity("slideUp",
                            {
                                complete: function () {
                                    t.css({
                                        "margin-top": ""
                                    });
                                },
                                duration: 200,
                                easing: easing_swiftOut
                            });
                    }
                });
    </script>
}